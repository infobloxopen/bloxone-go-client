/*
IPAM Federation API

The DDI IPAM Federation application enables a SaaS administrator to manage multiple IPAM systems from one central control point CSP.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipamfederation

import (
	"encoding/json"
)

// checks if the GetNextAvailableDelegationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNextAvailableDelegationRequest{}

// GetNextAvailableDelegationRequest struct for GetNextAvailableDelegationRequest
type GetNextAvailableDelegationRequest struct {
	// The arguments which will be used as parameters while creating __Delegation__ object.
	Arguments *NextAvailableDelegationArguments `json:"arguments,omitempty"`
	// The properties, which will be used to fill the created __Delegation__ object.
	Properties           *NextAvailableDelegationProperties `json:"properties,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetNextAvailableDelegationRequest GetNextAvailableDelegationRequest

// NewGetNextAvailableDelegationRequest instantiates a new GetNextAvailableDelegationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNextAvailableDelegationRequest() *GetNextAvailableDelegationRequest {
	this := GetNextAvailableDelegationRequest{}
	return &this
}

// NewGetNextAvailableDelegationRequestWithDefaults instantiates a new GetNextAvailableDelegationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNextAvailableDelegationRequestWithDefaults() *GetNextAvailableDelegationRequest {
	this := GetNextAvailableDelegationRequest{}
	return &this
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *GetNextAvailableDelegationRequest) GetArguments() NextAvailableDelegationArguments {
	if o == nil || IsNil(o.Arguments) {
		var ret NextAvailableDelegationArguments
		return ret
	}
	return *o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNextAvailableDelegationRequest) GetArgumentsOk() (*NextAvailableDelegationArguments, bool) {
	if o == nil || IsNil(o.Arguments) {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *GetNextAvailableDelegationRequest) HasArguments() bool {
	if o != nil && !IsNil(o.Arguments) {
		return true
	}

	return false
}

// SetArguments gets a reference to the given NextAvailableDelegationArguments and assigns it to the Arguments field.
func (o *GetNextAvailableDelegationRequest) SetArguments(v NextAvailableDelegationArguments) {
	o.Arguments = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *GetNextAvailableDelegationRequest) GetProperties() NextAvailableDelegationProperties {
	if o == nil || IsNil(o.Properties) {
		var ret NextAvailableDelegationProperties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNextAvailableDelegationRequest) GetPropertiesOk() (*NextAvailableDelegationProperties, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *GetNextAvailableDelegationRequest) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given NextAvailableDelegationProperties and assigns it to the Properties field.
func (o *GetNextAvailableDelegationRequest) SetProperties(v NextAvailableDelegationProperties) {
	o.Properties = &v
}

func (o GetNextAvailableDelegationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNextAvailableDelegationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arguments) {
		toSerialize["arguments"] = o.Arguments
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetNextAvailableDelegationRequest) UnmarshalJSON(data []byte) (err error) {
	varGetNextAvailableDelegationRequest := _GetNextAvailableDelegationRequest{}

	err = json.Unmarshal(data, &varGetNextAvailableDelegationRequest)

	if err != nil {
		return err
	}

	*o = GetNextAvailableDelegationRequest(varGetNextAvailableDelegationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "arguments")
		delete(additionalProperties, "properties")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetNextAvailableDelegationRequest struct {
	value *GetNextAvailableDelegationRequest
	isSet bool
}

func (v NullableGetNextAvailableDelegationRequest) Get() *GetNextAvailableDelegationRequest {
	return v.value
}

func (v *NullableGetNextAvailableDelegationRequest) Set(val *GetNextAvailableDelegationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNextAvailableDelegationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNextAvailableDelegationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNextAvailableDelegationRequest(val *GetNextAvailableDelegationRequest) *NullableGetNextAvailableDelegationRequest {
	return &NullableGetNextAvailableDelegationRequest{value: val, isSet: true}
}

func (v NullableGetNextAvailableDelegationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNextAvailableDelegationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
