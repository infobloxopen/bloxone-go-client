/*
BloxOne Redirect API

Testing CustomRedirectsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package redirect

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/infobloxopen/bloxone-go-client/redirect"
)

func TestCustomRedirectsAPIService(t *testing.T) {

	apiClient := redirect.NewAPIClient()

	t.Run("Test CustomRedirectsAPIService CreateCustomRedirect", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CustomRedirectsAPI.CreateCustomRedirect(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomRedirectsAPIService DeleteCustomRedirect", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.CustomRedirectsAPI.DeleteCustomRedirect(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomRedirectsAPIService DeleteSingleCustomRedirect", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		httpRes, err := apiClient.CustomRedirectsAPI.DeleteSingleCustomRedirect(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomRedirectsAPIService ListCustomRedirect", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CustomRedirectsAPI.ListCustomRedirect(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomRedirectsAPIService ReadCustomRedirect", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		resp, httpRes, err := apiClient.CustomRedirectsAPI.ReadCustomRedirect(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomRedirectsAPIService UpdateCustomRedirect", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		resp, httpRes, err := apiClient.CustomRedirectsAPI.UpdateCustomRedirect(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
