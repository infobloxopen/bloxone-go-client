openapi: 3.0.1
info:
  description: |
    You can configure BloxOne Threat Defense Cloud to redirect traffic to the Infoblox server that displays the default or customized redirect page. You can redirect traffic to a custom destination using custom redirects.
  title: BloxOne Redirect API
  version: v1
servers:
- url: https://csp.infoblox.com/api/atcfw/v1/
paths:
  /cert_download_urls:
    get:
      description: |
        Use this method to get certificates to use proxy server
      operationId: certificateGetProxyCertificates
      parameters:
      - description: "\n\nA collection of response resources can be transformed by\
          \ specifying a set of JSON tags to be returned. For a “flat” resource, the\
          \ tag name is straightforward. If field selection is allowed on non-flat\
          \ hierarchical resources, the service should implement a qualified naming\
          \ scheme such as dot-qualification to reference data down the hierarchy.\
          \ If a resource does not have the specified tag, the tag does not appear\
          \ in the output resource.\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names.\n\n\t\t\t\t\t\t"
        in: query
        name: _fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirectProxyCertResponse'
          description: GET operation response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: Get Proxy Certificates
      tags:
      - certificate
  /custom_redirects:
    delete:
      description: |
        Use this method to delete Custom Redirect objects. Deletion of multiple lists is an all-or-nothing operation (if any of the specified lists can not be deleted then none of the specified lists will be deleted).

        You can configure BloxOne Cloud to redirect traffic to the Infoblox redirect page or a custom redirect destination. BloxOne Cloud allows you to apply multiple redirect actions and integrate BloxOne Cloud with third-party proxies, secure web gateways, blackholes, honeypots and sinkhole solutions.

        Required:
        - ids
      operationId: custom_redirectsDeleteCustomRedirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/redirectCustomRedirectDeleteRequest'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_redirectsDeleteCustomRedirect_400_response'
          description: |2-

            - 'ids' value must be non-empty
            - 'ids' value must contain unique elements
            - 'ids' value must contain values that are greater than or equal to zero
            - custom redirects assigned to a security policy cannot be deleted
            - 'ids' value must contain existing custom redirect identifiers
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: Delete Custom Redirect.
      tags:
      - custom_redirects
      x-codegen-request-body-name: body
    get:
      description: |
        Use this method to retrieve information on all Custom Redirect objects for the account.

        You can configure BloxOne Cloud to redirect traffic to the Infoblox redirect page or a custom redirect destination. BloxOne Cloud allows you to apply multiple redirect actions and integrate BloxOne Cloud with third-party proxies, secure web gateways, blackholes, honeypots and sinkhole solutions.
      operationId: custom_redirectsListCustomRedirect
      parameters:
      - description: "\n\nA collection of response resources can be transformed by\
          \ specifying a set of JSON tags to be returned. For a “flat” resource, the\
          \ tag name is straightforward. If field selection is allowed on non-flat\
          \ hierarchical resources, the service should implement a qualified naming\
          \ scheme such as dot-qualification to reference data down the hierarchy.\
          \ If a resource does not have the specified tag, the tag does not appear\
          \ in the output resource.\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names.\n\n\t\t\t\t\t\t"
        in: query
        name: _fields
        schema:
          type: string
      - description: "\n\nA collection of response resources can be filtered by a\
          \ logical expression string that includes JSON tag references to values\
          \ in each resource, literal values, and logical operators. If a resource\
          \ does not have the specified tag, its value is assumed to be null.\n\n\
          Literal values include numbers (integer and floating-point), and quoted\
          \ (both single- or double-quoted) literal strings, and 'null'. The following\
          \ operators are commonly used in filter expressions:\n\n|  Op   |  Description\
          \               | \n|  --   |  -----------               | \n|  ==   | \
          \ Equal                     | \n|  !=   |  Not Equal                 | \n\
          |  >    |  Greater Than              | \n|   >=  |  Greater Than or Equal\
          \ To  | \n|  <    |  Less Than                 | \n|  <=   |  Less Than\
          \ or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |\
          \  Matches Regex             | \n|  !~   |  Does Not Match Regex      |\
          \ \n|  or   |  Logical OR                | \n|  not  |  Logical NOT    \
          \           | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t"
        in: query
        name: _filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirectCustomRedirectMultiResponse'
          description: GET operation response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: List Custom Redirects.
      tags:
      - custom_redirects
    post:
      description: |
        Use this method to create a Custom Redirect object.

        You can configure BloxOne Cloud to redirect traffic to the Infoblox redirect page or a custom redirect destination. BloxOne Cloud allows you to apply multiple redirect actions and integrate BloxOne Cloud with third-party proxies, secure web gateways, blackholes, honeypots and sinkhole solutions.

        Required:
        - name
        - data
      operationId: custom_redirectsCreateCustomRedirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/redirectCustomRedirect'
        description: The Custom Redirect object.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirectCustomRedirectCreateResponse'
          description: POST operation response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_redirectsCreateCustomRedirect_400_response'
          description: |2-

            - 'name' length cannot exceed 256 characters limit
            - 'description' length cannot exceed 256 characters limit
            - 'data' must contain a valid IPv4 address or domain name
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_redirectsCreateCustomRedirect_409_response'
          description: |2-

            - 'name' value must be unique among named lists belonging to the same account
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: Create Custom Redirect.
      tags:
      - custom_redirects
      x-codegen-request-body-name: body
  /custom_redirects/{id}:
    delete:
      description: |
        Use this method to delete Custom Redirect object.

        You can configure BloxOne Cloud to redirect traffic to the Infoblox redirect page or a custom redirect destination. BloxOne Cloud allows you to apply multiple redirect actions and integrate BloxOne Cloud with third-party proxies, secure web gateways, blackholes, honeypots and sinkhole solutions.
      operationId: custom_redirectsDeleteSingleCustomRedirect
      parameters:
      - description: The Custom Redirect object identifier.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_redirectsDeleteSingleCustomRedirect_400_response'
          description: |2-

            - 'id' value must contain values that are greater than or equal to zero
            - 'ids' value must contain existing custom redirect identifiers
            - custom redirects assigned to a security policy cannot be deleted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: Delete Custom Redirect By Id.
      tags:
      - custom_redirects
    get:
      description: |
        Use this method to retrieve information on the specified Custom Redirect object.

        You can configure BloxOne Cloud to redirect traffic to the Infoblox redirect page or a custom redirect destination. BloxOne Cloud allows you to apply multiple redirect actions and integrate BloxOne Cloud with third-party proxies, secure web gateways, blackholes, honeypots and sinkhole solutions.
      operationId: custom_redirectsReadCustomRedirect
      parameters:
      - description: The Custom Redirect object identifier.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: "\n\nA collection of response resources can be transformed by\
          \ specifying a set of JSON tags to be returned. For a “flat” resource, the\
          \ tag name is straightforward. If field selection is allowed on non-flat\
          \ hierarchical resources, the service should implement a qualified naming\
          \ scheme such as dot-qualification to reference data down the hierarchy.\
          \ If a resource does not have the specified tag, the tag does not appear\
          \ in the output resource.\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names.\n\n\t\t\t\t\t\t"
        in: query
        name: _fields
        schema:
          type: string
      - description: The name of the custom redirect. May be used if id==0.
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirectCustomRedirectReadResponse'
          description: GET operation response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_redirectsReadCustomRedirect_404_response'
          description: |2-

            - 'id' value must contain existing custom redirect identifier
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: Read Custom Redirect.
      tags:
      - custom_redirects
    put:
      description: |
        Use this method to update a specified Custom Redirect object.

        You can configure BloxOne Cloud to redirect traffic to the Infoblox redirect page or a custom redirect destination. BloxOne Cloud allows you to apply multiple redirect actions and integrate BloxOne Cloud with third-party proxies, secure web gateways, blackholes, honeypots and sinkhole solutions.

        Required:
        - name
        - data
      operationId: custom_redirectsUpdateCustomRedirect
      parameters:
      - description: The Custom Redirect object identifier.
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/redirectCustomRedirect'
        description: The Custom Redirect object.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirectCustomRedirectUpdateResponse'
          description: PUT operation response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_redirectsCreateCustomRedirect_400_response'
          description: |2-

            - 'name' length cannot exceed 256 characters limit
            - 'description' length cannot exceed 256 characters limit
            - 'data' must contain a valid IPv4 address or domain name
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_redirectsReadCustomRedirect_404_response'
          description: |2-

            - 'id' value must contain existing custom redirect identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom_redirectsUpdateCustomRedirect_409_response'
          description: |2-

            - 'name' value must be unique among named lists belonging to the same account
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: Update Custom Redirect.
      tags:
      - custom_redirects
      x-codegen-request-body-name: body
  /redirect_page:
    get:
      description: |
        Use this method to retrieve the Redirect Page object.

        When blocking users from accessing certain domains, you can redirect them to a page that delivers a default message about the action. You can also set a redirect page of your own or customize the redirect message.
      operationId: redirect_pageReadRedirectPage
      parameters:
      - description: "\n\nA collection of response resources can be filtered by a\
          \ logical expression string that includes JSON tag references to values\
          \ in each resource, literal values, and logical operators. If a resource\
          \ does not have the specified tag, its value is assumed to be null.\n\n\
          Literal values include numbers (integer and floating-point), and quoted\
          \ (both single- or double-quoted) literal strings, and 'null'. The following\
          \ operators are commonly used in filter expressions:\n\n|  Op   |  Description\
          \               | \n|  --   |  -----------               | \n|  ==   | \
          \ Equal                     | \n|  !=   |  Not Equal                 | \n\
          |  >    |  Greater Than              | \n|   >=  |  Greater Than or Equal\
          \ To  | \n|  <    |  Less Than                 | \n|  <=   |  Less Than\
          \ or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |\
          \  Matches Regex             | \n|  !~   |  Does Not Match Regex      |\
          \ \n|  or   |  Logical OR                | \n|  not  |  Logical NOT    \
          \           | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t"
        in: query
        name: _filter
        schema:
          type: string
      - description: "\n\nA collection of response resources can be transformed by\
          \ specifying a set of JSON tags to be returned. For a “flat” resource, the\
          \ tag name is straightforward. If field selection is allowed on non-flat\
          \ hierarchical resources, the service should implement a qualified naming\
          \ scheme such as dot-qualification to reference data down the hierarchy.\
          \ If a resource does not have the specified tag, the tag does not appear\
          \ in the output resource.\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names.\n\n\t\t\t\t\t\t"
        in: query
        name: _fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirectRedirectPageReadResponse'
          description: GET operation response
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: Read Redirect Page.
      tags:
      - redirect_page
    put:
      description: |
        Use this method to update the Redirect Page object.

        When blocking users from accessing certain domains, you can redirect them to a page that delivers a default message about the action. You can also set a redirect page of your own or customize the redirect message.

        Required:
        - type
      operationId: redirect_pageUpdateRedirectPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/redirectUpdateRedirectPagePayload'
        description: The Redirect Page object.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirectRedirectPageUpdateResponse'
          description: PUT operation response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect_pageUpdateRedirectPage_400_response'
          description: |2-

            - 'type' value must contain valid redirect page type that is 'custom' or 'default'
            - 'content' length cannot exceed 262144 characters limit
            - 'redirect_ip_address' must contain valid IPv4 address
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certificateGetProxyCertificates_500_response'
          description: |2-

            - Internal server error occurred
      summary: Update Redirect Page.
      tags:
      - redirect_page
      x-codegen-request-body-name: body
components:
  schemas:
    redirectCustomRedirect:
      description: |-
        The Custom Redirect object.

        You can configure BloxOne Cloud to redirect traffic to the Infoblox redirect page or a custom redirect destination. BloxOne Cloud allows you to apply multiple redirect actions and integrate BloxOne Cloud with third-party proxies, secure web gateways, blackholes, honeypots and sinkhole solutions.
      example:
        created_time: 2000-01-23T04:56:07.000+00:00
        updated_time: 2000-01-23T04:56:07.000+00:00
        data: "193.56.2.11, 193.56.2.12, 2001:db8:ffff:ffff:ffff:ffff:ffff:fff1"
        policy_names:
        - security_policy_a
        - security_policy_b
        name: custom_redirect_a
        id: 0
        policy_ids:
        - 245613
        - 12476
      properties:
        created_time:
          description: The time when this Custom Redirect object was created.
          format: date-time
          readOnly: true
          type: string
        data:
          description: The list of csv custom IPv4/IPv6 or a single domain redirect
            address.
          example: "193.56.2.11, 193.56.2.12, 2001:db8:ffff:ffff:ffff:ffff:ffff:fff1"
          type: string
        id:
          description: The Custom Redirect object identifier.
          format: int32
          readOnly: true
          type: integer
        name:
          description: The name of the custom redirect.
          example: custom_redirect_a
          type: string
        policy_ids:
          description: The list of the security policy identifiers with which the
            named list is associated.
          example:
          - 245613
          - 12476
          items:
            format: int32
            type: integer
          readOnly: true
          type: array
        policy_names:
          description: The list of the security policy names with which the custom
            redirect is associated.
          example:
          - security_policy_a
          - security_policy_b
          items:
            type: string
          readOnly: true
          type: array
        updated_time:
          description: The time when this Custom Redirect object was last updated.
          format: date-time
          readOnly: true
          type: string
      type: object
    redirectCustomRedirectCreateResponse:
      description: The Custom Redirect create response.
      example:
        results:
          created_time: 2000-01-23T04:56:07.000+00:00
          updated_time: 2000-01-23T04:56:07.000+00:00
          data: "193.56.2.11, 193.56.2.12, 2001:db8:ffff:ffff:ffff:ffff:ffff:fff1"
          policy_names:
          - security_policy_a
          - security_policy_b
          name: custom_redirect_a
          id: 0
          policy_ids:
          - 245613
          - 12476
      properties:
        results:
          $ref: '#/components/schemas/redirectCustomRedirect'
      type: object
    redirectCustomRedirectDeleteRequest:
      description: The Custom Redirect delete request.
      properties:
        ids:
          description: The list of Custom Redirect object identifiers.
          example:
          - 12345
          - 53215
          items:
            format: int32
            type: integer
          type: array
      type: object
    redirectCustomRedirectMultiResponse:
      description: The Custom Redirect list response.
      example:
        results:
        - created_time: 2000-01-23T04:56:07.000+00:00
          updated_time: 2000-01-23T04:56:07.000+00:00
          data: "193.56.2.11, 193.56.2.12, 2001:db8:ffff:ffff:ffff:ffff:ffff:fff1"
          policy_names:
          - security_policy_a
          - security_policy_b
          name: custom_redirect_a
          id: 0
          policy_ids:
          - 245613
          - 12476
        - created_time: 2000-01-23T04:56:07.000+00:00
          updated_time: 2000-01-23T04:56:07.000+00:00
          data: "193.56.2.11, 193.56.2.12, 2001:db8:ffff:ffff:ffff:ffff:ffff:fff1"
          policy_names:
          - security_policy_a
          - security_policy_b
          name: custom_redirect_a
          id: 0
          policy_ids:
          - 245613
          - 12476
      properties:
        results:
          description: The list of Custom Redirect objects.
          items:
            $ref: '#/components/schemas/redirectCustomRedirect'
          type: array
      type: object
    redirectCustomRedirectReadResponse:
      description: The Custom Redirect read response.
      example:
        results:
          created_time: 2000-01-23T04:56:07.000+00:00
          updated_time: 2000-01-23T04:56:07.000+00:00
          data: "193.56.2.11, 193.56.2.12, 2001:db8:ffff:ffff:ffff:ffff:ffff:fff1"
          policy_names:
          - security_policy_a
          - security_policy_b
          name: custom_redirect_a
          id: 0
          policy_ids:
          - 245613
          - 12476
      properties:
        results:
          $ref: '#/components/schemas/redirectCustomRedirect'
      type: object
    redirectCustomRedirectUpdateResponse:
      description: The Custom Redirect update response.
      example:
        results:
          created_time: 2000-01-23T04:56:07.000+00:00
          updated_time: 2000-01-23T04:56:07.000+00:00
          data: "193.56.2.11, 193.56.2.12, 2001:db8:ffff:ffff:ffff:ffff:ffff:fff1"
          policy_names:
          - security_policy_a
          - security_policy_b
          name: custom_redirect_a
          id: 0
          policy_ids:
          - 245613
          - 12476
      properties:
        results:
          $ref: '#/components/schemas/redirectCustomRedirect'
      type: object
    redirectProxyCertResponse:
      example:
        certificate_url: certificate_url
        anycast_dns_certificate_url: anycast_dns_certificate_url
      properties:
        anycast_dns_certificate_url:
          description: Infoblox anycast dns client certificate URL.
          type: string
        certificate_url:
          description: The certificate URL.
          type: string
      type: object
    redirectRedirectPage:
      description: |-
        The Redirect Page object.

        When blocking users from accessing certain domains, you can redirect them to a page that delivers a default message about the action. You can also set a redirect page of your own or customize the redirect message.
      example:
        created_time: 2000-01-23T04:56:07.000+00:00
        updated_time: 2000-01-23T04:56:07.000+00:00
        type: custom
        redirect_ip_address: 135.32.5.11
        content: <!DOCTYPE html><html><body><h1>Redirect</h1></body></html>
        smart: true
        redirect_ipv6_address: 2001:db8:ffff:ffff:ffff:ffff:ffff:ffff
      properties:
        content:
          description: The content of the redirect page for the "custom" redirect
            type.
          example: <!DOCTYPE html><html><body><h1>Redirect</h1></body></html>
          type: string
        created_time:
          description: The time when this Redirect Page object was created.
          format: date-time
          readOnly: true
          type: string
        redirect_ip_address:
          description: The redirect IPv4 address.
          example: 135.32.5.11
          type: string
        redirect_ipv6_address:
          description: The redirect IPv6 address.
          example: 2001:db8:ffff:ffff:ffff:ffff:ffff:ffff
          type: string
        smart:
          description: Whether the redirect type is smart
          format: boolean
          type: boolean
        type:
          description: The type of the redirect page that can be "default" or "custom".
          enum:
          - default
          - custom
          example: custom
          type: string
        updated_time:
          description: The time when this Redirect Page object was last updated.
          format: date-time
          readOnly: true
          type: string
      type: object
    redirectRedirectPageReadResponse:
      description: The Redirect Page read response.
      example:
        results:
          created_time: 2000-01-23T04:56:07.000+00:00
          updated_time: 2000-01-23T04:56:07.000+00:00
          type: custom
          redirect_ip_address: 135.32.5.11
          content: <!DOCTYPE html><html><body><h1>Redirect</h1></body></html>
          smart: true
          redirect_ipv6_address: 2001:db8:ffff:ffff:ffff:ffff:ffff:ffff
      properties:
        results:
          $ref: '#/components/schemas/redirectRedirectPage'
      type: object
    redirectRedirectPageUpdateResponse:
      description: The Redirect Page update response.
      example:
        results:
          created_time: 2000-01-23T04:56:07.000+00:00
          updated_time: 2000-01-23T04:56:07.000+00:00
          type: custom
          redirect_ip_address: 135.32.5.11
          content: <!DOCTYPE html><html><body><h1>Redirect</h1></body></html>
          smart: true
          redirect_ipv6_address: 2001:db8:ffff:ffff:ffff:ffff:ffff:ffff
      properties:
        results:
          $ref: '#/components/schemas/redirectRedirectPage'
      type: object
    redirectUpdateRedirectPagePayload:
      properties:
        content:
          description: The content of the redirect page for the "custom" redirect
            type.
          example: <!DOCTYPE html><html><body><h1>Redirect</h1></body></html>
          type: string
        redirect_ip_address:
          description: The redirect IPv4 address.
          example: 135.32.5.11
          type: string
        redirect_ipv6_address:
          description: The redirect IPv6 address.
          example: 2001:db8:ffff:ffff:ffff:ffff:ffff:ffff
          type: string
        smart:
          description: Change the redirect page from non-proxy (smart == false) to
            proxy (smart)
          format: boolean
          type: boolean
        type:
          description: The type of the redirect page that can be "default" or "custom".
          enum:
          - default
          - custom
          example: custom
          type: string
      type: object
    certificateGetProxyCertificates_500_response_error:
      example:
        code: INTERNAL
        message: Internal Server Error
        status: "500"
      properties:
        code:
          example: INTERNAL
          type: string
        message:
          example: Internal Server Error
          type: string
        status:
          example: "500"
          type: string
      type: object
    certificateGetProxyCertificates_500_response:
      example:
        error:
          code: INTERNAL
          message: Internal Server Error
          status: "500"
      properties:
        error:
          $ref: '#/components/schemas/certificateGetProxyCertificates_500_response_error'
      type: object
    custom_redirectsCreateCustomRedirect_400_response_error:
      example:
        code: INVALID_ARGUMENT
        message: '''name'' must not be empty'
        status: "400"
      properties:
        code:
          example: INVALID_ARGUMENT
          type: string
        message:
          example: '''name'' must not be empty'
          type: string
        status:
          example: "400"
          type: string
      type: object
    custom_redirectsCreateCustomRedirect_400_response:
      example:
        error:
          code: INVALID_ARGUMENT
          message: '''name'' must not be empty'
          status: "400"
      properties:
        error:
          $ref: '#/components/schemas/custom_redirectsCreateCustomRedirect_400_response_error'
      type: object
    custom_redirectsCreateCustomRedirect_409_response_error:
      example:
        code: ALREADY_EXISTS
        message: Custom Redirect with name 'custom_redirect_ip_address_1' already
          exists
        status: "409"
      properties:
        code:
          example: ALREADY_EXISTS
          type: string
        message:
          example: Custom Redirect with name 'custom_redirect_ip_address_1' already
            exists
          type: string
        status:
          example: "409"
          type: string
      type: object
    custom_redirectsCreateCustomRedirect_409_response:
      example:
        error:
          code: ALREADY_EXISTS
          message: Custom Redirect with name 'custom_redirect_ip_address_1' already
            exists
          status: "409"
      properties:
        error:
          $ref: '#/components/schemas/custom_redirectsCreateCustomRedirect_409_response_error'
      type: object
    custom_redirectsDeleteCustomRedirect_400_response_error:
      example:
        code: INVALID_ARGUMENT
        message: Custom Redirect 'ids' can't be empty
        status: "400"
      properties:
        code:
          example: INVALID_ARGUMENT
          type: string
        message:
          example: Custom Redirect 'ids' can't be empty
          type: string
        status:
          example: "400"
          type: string
      type: object
    custom_redirectsDeleteCustomRedirect_400_response:
      example:
        error:
          code: INVALID_ARGUMENT
          message: Custom Redirect 'ids' can't be empty
          status: "400"
      properties:
        error:
          $ref: '#/components/schemas/custom_redirectsDeleteCustomRedirect_400_response_error'
      type: object
    custom_redirectsReadCustomRedirect_404_response_error:
      example:
        code: NOT_FOUND
        message: Custom Redirect does not exist
        status: "404"
      properties:
        code:
          example: NOT_FOUND
          type: string
        message:
          example: Custom Redirect does not exist
          type: string
        status:
          example: "404"
          type: string
      type: object
    custom_redirectsReadCustomRedirect_404_response:
      example:
        error:
          code: NOT_FOUND
          message: Custom Redirect does not exist
          status: "404"
      properties:
        error:
          $ref: '#/components/schemas/custom_redirectsReadCustomRedirect_404_response_error'
      type: object
    custom_redirectsUpdateCustomRedirect_409_response_error:
      example:
        code: ALREADY_EXISTS
        message: Custom Redirect with name '<name>' already exists
        status: "409"
      properties:
        code:
          example: ALREADY_EXISTS
          type: string
        message:
          example: Custom Redirect with name '<name>' already exists
          type: string
        status:
          example: "409"
          type: string
      type: object
    custom_redirectsUpdateCustomRedirect_409_response:
      example:
        error:
          code: ALREADY_EXISTS
          message: Custom Redirect with name '<name>' already exists
          status: "409"
      properties:
        error:
          $ref: '#/components/schemas/custom_redirectsUpdateCustomRedirect_409_response_error'
      type: object
    custom_redirectsDeleteSingleCustomRedirect_400_response_error:
      example:
        code: INVALID_ARGUMENT
        message: "invalid 'id': value must be greater than or equal to 0"
        status: "400"
      properties:
        code:
          example: INVALID_ARGUMENT
          type: string
        message:
          example: "invalid 'id': value must be greater than or equal to 0"
          type: string
        status:
          example: "400"
          type: string
      type: object
    custom_redirectsDeleteSingleCustomRedirect_400_response:
      example:
        error:
          code: INVALID_ARGUMENT
          message: "invalid 'id': value must be greater than or equal to 0"
          status: "400"
      properties:
        error:
          $ref: '#/components/schemas/custom_redirectsDeleteSingleCustomRedirect_400_response_error'
      type: object
    redirect_pageUpdateRedirectPage_400_response_error:
      example:
        code: INVALID_ARGUMENT
        message: '''type'' must not be empty'
        status: "400"
      properties:
        code:
          example: INVALID_ARGUMENT
          type: string
        message:
          example: '''type'' must not be empty'
          type: string
        status:
          example: "400"
          type: string
      type: object
    redirect_pageUpdateRedirectPage_400_response:
      example:
        error:
          code: INVALID_ARGUMENT
          message: '''type'' must not be empty'
          status: "400"
      properties:
        error:
          $ref: '#/components/schemas/redirect_pageUpdateRedirectPage_400_response_error'
      type: object
x-original-swagger-version: "2.0"
