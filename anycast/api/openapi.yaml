openapi: 3.0.1
info:
  description: |+
    Anycast capability enables HA (High Availability) configuration of BloxOne applications that run on equipment located on customer's premises (on-prem hosts). Anycast supports DNS, as well as DNS-forwarding services.

    Anycast-enabled application setups use multiple on-premises installations for one particular application type. Multiple application instances are configured to use the same endpoint address. Anycast capability is collocated with such application instance, monitoring the local application instance and advertising to the upstream router (a customer equipment) a per-instance, local route to the common application endpoint address, as long as the local application instance is available. Depending on the type of the upstream router, the customer may configure local route advertisement via either BGP (Boarder Gateway Protocol) or OSPF (Open Shortest Path First) routing protocols. Both protocols may be enabled as well. Multiple routes to the common application service address provide redundancy without the need to reconfigure application clients.

    Should an application instance become unavailable, the local route advertisements stop, resulting in withdrawal of the route (in the upstream router) to the application instance that has gone out of service and ensuring that subsequent application requests thus get routed to the remaining available application instances.

  title: BloxOne Anycast API
  version: v1
servers:
- url: http://csp.infoblox.com/api/anycast/v1/
- url: https://csp.infoblox.com/api/anycast/v1/
security:
- ApiKeyAuth: []
paths:
  /accm/ac_configs:
    get:
      description: |-
        Without any filtering, use this method to retrieve all named anycast configurations for the account of authorization. Anycast configuration comprises common anycast configuration data that is defined in support of one service on a set of on-prem hosts. The anycast configurations resulting from this call will not include the list(s) of member hosts. Retrieving the list of member hosts requires the GET operation on single anycast configuration resource. If the account has no anycast configurations defined, the result of this call will be an empty list.
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerGetAnycastConfigList
      parameters:
      - in: query
        name: account_id
        schema:
          format: int64
          type: integer
      - in: query
        name: service
        schema:
          type: string
      - in: query
        name: host_id
        schema:
          format: int64
          type: integer
      - in: query
        name: ophid
        schema:
          type: string
      - in: query
        name: is_configured
        schema:
          format: boolean
          type: boolean
      - in: query
        name: _tfilter
        schema:
          type: string
      - in: query
        name: _torder_by
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoGetAnycastConfigListResponse'
          description: GET operation response
      summary: Retrieve Multiple Anycast Configurations
      tags:
      - OnPremAnycastManager
    post:
      description: |-
        Use this method to create anycast configuration, as per the specified payload.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerCreateAnycastConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protoAnycastConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoAnycastConfigResponse'
          description: POST operation response
      summary: Create Anycast Configuration
      tags:
      - OnPremAnycastManager
      x-tf-resource: anycast_ac_config
      x-tf-datasource: anycast_ac_configs
      x-codegen-request-body-name: body
  /accm/ac_configs/{id}:
    delete:
      description: |-
        Use this method to delete the addressed anycast configuration.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerDeleteAnycastConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoEmptyResponse'
          description: DELETE operation response
      summary: Delete Anycast Configuration
      tags:
      - OnPremAnycastManager
    get:
      description: |-
        Use this method to retrieve the specified anycast configuration, together with the list of member hosts.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerGetAnycastConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoAnycastConfigResponse'
          description: GET operation response
      summary: Retrieve Anycast Configuration
      tags:
      - OnPremAnycastManager
    put:
      description: |-
        Use this method to replace the addressed anycast configuration with configuration from the payload. If the addressed configuration does not exist, it will be created. Anycast configuration specified in the payload may contain the list of on-prem hosts that are supposed to be established as members of the specified configuration. If the anycast service has no information about one or more hosts from this list, such hosts will be created in the anycast service database. Note that the anycast service includes a background capability that verifies the validity of host data entered this way. This capability will delete any hosts created in this way that are determined to be invalid.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerUpdateAnycastConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protoAnycastConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoAnycastConfigResponse'
          description: PUT operation response
      summary: Create or Update Anycast Configuration
      tags:
      - OnPremAnycastManager
      x-codegen-request-body-name: body
  /accm/ac_runtime_statuses:
    get:
      description: |-
        Without any filtering, use this method to retrieve all named anycast configurations for the account of authorization. Anycast configuration comprises common anycast configuration data that is defined in support of one service on a set of on-prem hosts. The anycast configurations resulting from this call will not include the list(s) of member hosts. Retrieving the list of member hosts requires the GET operation on single anycast configuration resource. If the account has no anycast configurations defined, the result of this call will be an empty list.
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerListAnycastConfigsWithRuntimeStatus
      parameters:
      - in: query
        name: account_id
        schema:
          format: int64
          type: integer
      - in: query
        name: service
        schema:
          type: string
      - in: query
        name: host_id
        schema:
          format: int64
          type: integer
      - in: query
        name: ophid
        schema:
          type: string
      - in: query
        name: is_configured
        schema:
          format: boolean
          type: boolean
      - in: query
        name: _tfilter
        schema:
          type: string
      - in: query
        name: _torder_by
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoGetAnycastConfigListResponse'
          description: GET operation response
      summary: Read list of Anycast Configurations
      tags:
      - OnPremAnycastManager
  /accm/ac_runtime_statuses/{id}:
    get:
      description: |-
        Use this method to retrieve the specified anycast configuration, together with the list of member hosts.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerReadAnycastConfigWithRuntimeStatus
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoAnycastConfigResponse'
          description: GET operation response
      summary: Read Anycast Configuration
      tags:
      - OnPremAnycastManager
  /accm/ac_version/{id}:
    delete:
      description: |-
        Use this method to delete anycast 2.0 version associated with the given account id
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerDeleteAnycastVersion
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoEmptyResponse'
          description: DELETE operation response
      summary: Delete anycast version
      tags:
      - OnPremAnycastManager
    get:
      description: |-
        Use this method to retrieve the anycast version for the given account id
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerGetAnycastVersion
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoAnycastVersion'
          description: GET operation response
      summary: Retrieve Anycast Version
      tags:
      - OnPremAnycastManager
    post:
      description: |-
        Use this method to create anycast 2.0 version for the account ID
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerCreateAnycastVersion
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoEmptyResponse'
          description: POST operation response
      summary: Create Anycast Version
      tags:
      - OnPremAnycastManager
  /accm/op_hosts/{id}:
    delete:
      description: |-
        Use this method to delete the addressed on-prem host.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerDeleteOnpremHost
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoEmptyResponse'
          description: DELETE operation response
      summary: Delete On-Prem Host
      tags:
      - OnPremAnycastManager
    get:
      description: |-
        Use this method to retrieve the specified on-prem host from the anycast database.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerGetOnpremHost
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoOnpremHostResponse'
          description: GET operation response
      summary: Retrieve On-Prem Host
      tags:
      - OnPremAnycastManager
    put:
      description: |-
        Use this method to create or update the addressed host as per the specified payload. The payload is supposed to provide complete replacement for the host data. If the addressed host does not exist, it will be created.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerUpdateOnpremHost
      parameters:
      - description: Numeric host identifier
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protoOnpremHost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protoOnpremHostResponse'
          description: PUT operation response
      summary: Create or Update On-Prem Host
      tags:
      - OnPremAnycastManager
      x-codegen-request-body-name: body
  /accm/oph_config_statuses/{ophid}/latest:
    get:
      description: |-
        Use this method to retrieve configuration status for the specified host. The configuration status is retrieved from the anycast service database.  "ophid" is the system-assigned unique character-string identifier of the host. "version" parameter can be either the timestamp of the configuration version that is sought after, or the word "latest". "latest' signifies the most recent generated configuration for this host.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerGetStatus
      parameters:
      - in: path
        name: ophid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceStatusUpdateRequest'
          description: GET operation response
      summary: Retrieve Configuration Status
      tags:
      - OnPremAnycastManager
  /accm/oph_configs/{ophid}/{version}:
    get:
      description: |-
        Use this method to retrieve generated anycast configuration for anycast-enabled on-prem host. Retrieved configuration includes both interface and routing configuration. See common config manager documentation for the description of the returned payload. "ophid" is the system-assigned unique character-string identifier of the host. "version" can be either the timestamp of the configuration version that is sought after, or the word "latest". "latest" signifies the most recent generated configuration for this host.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerGetOnpremConfig
      parameters:
      - in: path
        name: ophid
        required: true
        schema:
          type: string
      - in: path
        name: version
        required: true
        schema:
          type: string
      - in: query
        name: appName
        schema:
          type: string
      - in: query
        name: appVersion
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceConfig'
          description: GET operation response
      summary: "Retrieve Generated, Per-Host Anycast Configuration"
      tags:
      - OnPremAnycastManager
  /onprem_config/{ophid}/{version}:
    get:
      description: |-
        Use this method to retrieve generated anycast configuration for anycast-enabled on-prem host. Retrieved configuration includes both interface and routing configuration. See common config manager documentation for the description of the returned payload. "ophid" is the system-assigned unique character-string identifier of the host. "version" can be either the timestamp of the configuration version that is sought after, or the word "latest". "latest" signifies the most recent generated configuration for this host.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerGetOnpremConfig2
      parameters:
      - in: path
        name: ophid
        required: true
        schema:
          type: string
      - in: path
        name: version
        required: true
        schema:
          type: string
      - in: query
        name: appName
        schema:
          type: string
      - in: query
        name: appVersion
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceConfig'
          description: GET operation response
      summary: "Retrieve Generated, Per-Host Anycast Configuration"
      tags:
      - OnPremAnycastManager
  /onprem_config_statuses/{ophid}/latest:
    get:
      description: |-
        Use this method to retrieve configuration status for the specified host. The configuration status is retrieved from the anycast service database.  "ophid" is the system-assigned unique character-string identifier of the host. "version" parameter can be either the timestamp of the configuration version that is sought after, or the word "latest". "latest' signifies the most recent generated configuration for this host.
        @responses.400._error {"code": "INVALID_ARGUMENT", "message": "", "status": 400}
        @responses.404._error {"code": "NOT_FOUND", "message": "", "status": 404}
        @responses.500._error {"code": "INTERNAL", "message": "Internal Server Error", "status": 500}
      operationId: OnPremAnycastManagerGetStatus2
      parameters:
      - in: path
        name: ophid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceStatusUpdateRequest'
          description: GET operation response
      summary: Retrieve Configuration Status
      tags:
      - OnPremAnycastManager
components:
  schemas:
    protoAnycastConfig:
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        runtime_status: runtime_status
        anycast_ipv6_address: anycast_ipv6_address
        tags: "{}"
        account_id: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        service: service
        name: name
        anycast_ip_address: anycast_ip_address
        id: 6
        is_configured: true
        onprem_hosts:
        - ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
          ipv6_address: ::1
          name: name
          id: 1
          ip_address: 11.83.17.55
          runtime_status: runtime_status
        - ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
          ipv6_address: ::1
          name: name
          id: 1
          ip_address: 11.83.17.55
          runtime_status: runtime_status
        fields:
          paths:
          - paths
          - paths
      properties:
        account_id:
          format: int64
          type: integer
        anycast_ip_address:
          type: string
        anycast_ipv6_address:
          type: string
        created_at:
          format: date-time
          type: string
        description:
          type: string
        fields:
          $ref: '#/components/schemas/protobufFieldMask'
        id:
          format: int64
          readOnly: true
          type: integer
        is_configured:
          format: boolean
          type: boolean
        name:
          type: string
        onprem_hosts:
          items:
            $ref: '#/components/schemas/protoOnpremHostRef'
          type: array
        runtime_status:
          type: string
        service:
          type: string
        tags:
          additionalProperties: false
          type: object
        updated_at:
          format: date-time
          type: string
      type: object
    protoAnycastConfigRef:
      example:
        routing_protocols:
        - BGP
        - OSPF
        anycast_config_name: anycast_config_name
      properties:
        anycast_config_name:
          title: Anycast configuration name
          type: string
        routing_protocols:
          description: |-
            Routing protocols enabled for this anycast configuration, on a
            particular host. Valid protocol names are "BGP", "OSPF"/"OSPFv2", "OSPFv3".
          example:
          - BGP
          - OSPF
          items:
            type: string
          type: array
      title: Struct anycast configuration reference
      type: object
    protoAnycastConfigResponse:
      example:
        results:
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          runtime_status: runtime_status
          anycast_ipv6_address: anycast_ipv6_address
          tags: "{}"
          account_id: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          service: service
          name: name
          anycast_ip_address: anycast_ip_address
          id: 6
          is_configured: true
          onprem_hosts:
          - ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
            ipv6_address: ::1
            name: name
            id: 1
            ip_address: 11.83.17.55
            runtime_status: runtime_status
          - ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
            ipv6_address: ::1
            name: name
            id: 1
            ip_address: 11.83.17.55
            runtime_status: runtime_status
          fields:
            paths:
            - paths
            - paths
      properties:
        results:
          $ref: '#/components/schemas/protoAnycastConfig'
      type: object
    protoAnycastVersion:
      example:
        account_id: 0
        version: version
      properties:
        account_id:
          format: int64
          type: integer
        version:
          type: string
      type: object
    protoBgpConfig:
      example:
        preamble: preamble
        link_detect: true
        asn_text: asn_text
        holddown_secs: 6
        neighbors:
        - password: password
          asn_text: asn_text
          max_hop_count: 5
          multihop: true
          ip_address: 11.83.17.55
          asn: 5
        - password: password
          asn_text: asn_text
          max_hop_count: 5
          multihop: true
          ip_address: 11.83.17.55
          asn: 5
        keep_alive_secs: 1
        fields:
          paths:
          - paths
          - paths
        asn: 0
      properties:
        asn:
          format: int64
          title: Autonomous system number of this BGP/anycast enabled on-prem host
          type: integer
        asn_text:
          description: |-
            Examples:
                ASDOT        ASPLAIN     INTEGER     VALID/INVALID
                0.1          1           1           Valid
                1            1           1           Valid
                65535        65535       65535       Valid
                0.65535      65535       65535       Valid
                1.0          65536       65536       Valid
                1.1          65537       65537       Valid
                1.65535      131071      131071      Valid
                65535.0      4294901760  4294901760  Valid
                65535.1      4294901761  4294901761  Valid
                65535.65535  4294967295  4294967295  Valid

                0.65536                              Invalid
                65535.655536                         Invalid
                65536.0                              Invalid
                65536.65535                          Invalid
                             4294967296              Invalid
          title: |-
            Autonomous system as text (supported in ASDOT or ASPLAIN format)
            Optional, requires the asn field to be set to the equivalent integer value of the ASDOT/ASPLAIN string contained in this field
             or be unset/zero
          type: string
        fields:
          $ref: '#/components/schemas/protobufFieldMask'
        holddown_secs:
          format: int64
          title: BGP route hold-down timer
          type: integer
        keep_alive_secs:
          format: int64
          title: BGP keep-alive timer
          type: integer
        link_detect:
          format: boolean
          title: |-
            Enable/disable link detection
            @example true
          type: boolean
        neighbors:
          items:
            $ref: '#/components/schemas/protoBgpNeighbor'
          title: List of BgpNeighbor structs
          type: array
        preamble:
          description: "Any predefined BGP configuration, with embedded new lines;\
            \ the preamble will be prepended to the generated BGP configuration."
          type: string
      title: Struct BGP configuration; defines BGP configuration for one anycast-enabled
        on-prem host
      type: object
    protoBgpNeighbor:
      example:
        password: password
        asn_text: asn_text
        max_hop_count: 5
        multihop: true
        ip_address: 11.83.17.55
        asn: 5
      properties:
        asn:
          format: int64
          title: Autonomous system number of this BGP neighbor
          type: integer
        asn_text:
          description: |-
            Examples:
                ASDOT        ASPLAIN     INTEGER     VALID/INVALID
                0.1          1           1           Valid
                1            1           1           Valid
                65535        65535       65535       Valid
                0.65535      65535       65535       Valid
                1.0          65536       65536       Valid
                1.1          65537       65537       Valid
                1.65535      131071      131071      Valid
                65535.0      4294901760  4294901760  Valid
                65535.1      4294901761  4294901761  Valid
                65535.65535  4294967295  4294967295  Valid

                0.65536                              Invalid
                65535.655536                         Invalid
                65536.0                              Invalid
                65536.65535                          Invalid
                             4294967296              Invalid
          title: |-
            Autonomous system as text (supported in ASDOT or ASPLAIN format)
            Optional, requires the asn field to be set to the equivalent integer value of the ASDOT/ASPLAIN string contained in this field
             or be unset/zero
          type: string
        ip_address:
          description: IPv4 address of the BGP neighbor
          example: 11.83.17.55
          type: string
        max_hop_count:
          format: int64
          title: "Max hop count, if BGP multihop is enabled"
          type: integer
        multihop:
          format: boolean
          title: |-
            BGP multihop enabled or not
            @example true
          type: boolean
        password:
          title: "BGP protocol access password for this BGP neighbor, max 25 characters\
            \ long"
          type: string
      title: Struct BGP neighbor; describes one of the BGP neighbors that participate
        in BGP configuration for one anycast-enabled on-prem host
      type: object
    protoEmptyResponse:
      type: object
    protoGetAnycastConfigListResponse:
      example:
        results:
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          runtime_status: runtime_status
          anycast_ipv6_address: anycast_ipv6_address
          tags: "{}"
          account_id: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          service: service
          name: name
          anycast_ip_address: anycast_ip_address
          id: 6
          is_configured: true
          onprem_hosts:
          - ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
            ipv6_address: ::1
            name: name
            id: 1
            ip_address: 11.83.17.55
            runtime_status: runtime_status
          - ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
            ipv6_address: ::1
            name: name
            id: 1
            ip_address: 11.83.17.55
            runtime_status: runtime_status
          fields:
            paths:
            - paths
            - paths
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          runtime_status: runtime_status
          anycast_ipv6_address: anycast_ipv6_address
          tags: "{}"
          account_id: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          service: service
          name: name
          anycast_ip_address: anycast_ip_address
          id: 6
          is_configured: true
          onprem_hosts:
          - ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
            ipv6_address: ::1
            name: name
            id: 1
            ip_address: 11.83.17.55
            runtime_status: runtime_status
          - ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
            ipv6_address: ::1
            name: name
            id: 1
            ip_address: 11.83.17.55
            runtime_status: runtime_status
          fields:
            paths:
            - paths
            - paths
      properties:
        results:
          items:
            $ref: '#/components/schemas/protoAnycastConfig'
          type: array
      type: object
    protoOnpremHost:
      example:
        anycast_config_refs:
        - routing_protocols:
          - BGP
          - OSPF
          anycast_config_name: anycast_config_name
        - routing_protocols:
          - BGP
          - OSPF
          anycast_config_name: anycast_config_name
        config_ospfv3:
          area: 0.0.0.1
          dead_interval: 1
          cost: 7
          retransmit_interval: 1
          hello_interval: 1
          interface: eth0
          transmit_delay: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        ipv6_address: 2607:f0d0:1002:0051:0000:0000:0000:0004
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        config_bgp:
          preamble: preamble
          link_detect: true
          asn_text: asn_text
          holddown_secs: 6
          neighbors:
          - password: password
            asn_text: asn_text
            max_hop_count: 5
            multihop: true
            ip_address: 11.83.17.55
            asn: 5
          - password: password
            asn_text: asn_text
            max_hop_count: 5
            multihop: true
            ip_address: 11.83.17.55
            asn: 5
          keep_alive_secs: 1
          fields:
            paths:
            - paths
            - paths
          asn: 0
        id: 7
        ip_address: 11.83.17.55
        config_ospf:
          area: 0.0.0.1
          dead_interval: 9
          preamble: preamble
          authentication_key_id: 2
          cost: 7
          retransmit_interval: 2
          authentication_key: authentication_key
          hello_interval: 3
          area_type: area_type
          interface: eth0
          authentication_type: authentication_type
          transmit_delay: 4
      properties:
        anycast_config_refs:
          items:
            $ref: '#/components/schemas/protoAnycastConfigRef'
          title: "Array of AnycastConfigRef structures, identifying the anycast configurations\
            \ that this host is a member of"
          type: array
        config_bgp:
          $ref: '#/components/schemas/protoBgpConfig'
        config_ospf:
          $ref: '#/components/schemas/protoOspfConfig'
        config_ospfv3:
          $ref: '#/components/schemas/protoOspfv3Config'
        created_at:
          format: date-time
          title: Date/time this host was created in anycast service database
          type: string
        id:
          format: int64
          readOnly: true
          title: Numeric host identifier
          type: integer
        ip_address:
          description: IPv4 address of the on-prem host
          example: 11.83.17.55
          type: string
        ipv6_address:
          description: IPv6 address of the on-prem host
          example: 2607:f0d0:1002:0051:0000:0000:0000:0004
          type: string
        name:
          title: |-
            User-friendly name of the host
            @example "dns-host-1", "Central Office Server"
          type: string
        updated_at:
          format: date-time
          title: Date/time this host was last updated in anycast service database
          type: string
      title: Struct OnpremHost; represents one anycast-enabled on-prem host
      type: object
    protoOnpremHostRef:
      description: Struct on-prem host reference.
      example:
        ophid: 8b9ba7b03d05fbb1b31a41d47968dd43
        ipv6_address: ::1
        name: name
        id: 1
        ip_address: 11.83.17.55
        runtime_status: runtime_status
      properties:
        id:
          format: int64
          title: Numeric host identifier
          type: integer
        ip_address:
          description: IPv4 address of the host in string format
          example: 11.83.17.55
          type: string
        ipv6_address:
          description: IPv6 address of the host in string format
          example: ::1
          type: string
        name:
          title: |-
            User-friendly name of the host
            @example "dns-host-1", "Central Office Server"
          type: string
        ophid:
          description: Unique 32-character string identifier assigned to the host
          example: 8b9ba7b03d05fbb1b31a41d47968dd43
          readOnly: true
          type: string
        runtime_status:
          title: |-
            Runtime status of anycast configuration host
            @example "Active", "Inactive", "Degraded"
          type: string
      type: object
    protoOnpremHostResponse:
      example:
        results:
          anycast_config_refs:
          - routing_protocols:
            - BGP
            - OSPF
            anycast_config_name: anycast_config_name
          - routing_protocols:
            - BGP
            - OSPF
            anycast_config_name: anycast_config_name
          config_ospfv3:
            area: 0.0.0.1
            dead_interval: 1
            cost: 7
            retransmit_interval: 1
            hello_interval: 1
            interface: eth0
            transmit_delay: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          ipv6_address: 2607:f0d0:1002:0051:0000:0000:0000:0004
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          config_bgp:
            preamble: preamble
            link_detect: true
            asn_text: asn_text
            holddown_secs: 6
            neighbors:
            - password: password
              asn_text: asn_text
              max_hop_count: 5
              multihop: true
              ip_address: 11.83.17.55
              asn: 5
            - password: password
              asn_text: asn_text
              max_hop_count: 5
              multihop: true
              ip_address: 11.83.17.55
              asn: 5
            keep_alive_secs: 1
            fields:
              paths:
              - paths
              - paths
            asn: 0
          id: 7
          ip_address: 11.83.17.55
          config_ospf:
            area: 0.0.0.1
            dead_interval: 9
            preamble: preamble
            authentication_key_id: 2
            cost: 7
            retransmit_interval: 2
            authentication_key: authentication_key
            hello_interval: 3
            area_type: area_type
            interface: eth0
            authentication_type: authentication_type
            transmit_delay: 4
      properties:
        results:
          $ref: '#/components/schemas/protoOnpremHost'
      type: object
    protoOspfConfig:
      example:
        area: 0.0.0.1
        dead_interval: 9
        preamble: preamble
        authentication_key_id: 2
        cost: 7
        retransmit_interval: 2
        authentication_key: authentication_key
        hello_interval: 3
        area_type: area_type
        interface: eth0
        authentication_type: authentication_type
        transmit_delay: 4
      properties:
        area:
          description: OSPF area identifier; usually in the format of an IPv4 address
            (although not an address itself)
          example: 0.0.0.1
          type: string
        area_type:
          title: "OSPF area type; one of: \"STANDARD\", \"STUB\", \"NSSA\""
          type: string
        authentication_key:
          title: OSPF authentication key
          type: string
        authentication_key_id:
          format: int64
          title: Numeric OSPF authentication key identifier
          type: integer
        authentication_type:
          title: "OSPF authentication type; one of \"Clear\", \"MD5\""
          type: string
        cost:
          format: int64
          title: Explicit link cost for the interface
          type: integer
        dead_interval:
          format: int64
          title: "OSPF router dead interval timer in seconds; must be the same for\
            \ all the routers on the same network; default: 40 secs"
          type: integer
        hello_interval:
          format: int64
          title: "Period (in seconds) of OSPF Hello packet, sent by the OSPF router;\
            \ must be the same for all the routers on the same network; default: 10\
            \ secs"
          type: integer
        interface:
          description: Name of the interface that is configured with external IP address
            of the host
          example: eth0
          type: string
        preamble:
          description: "Any predefined OSPF configuration, with embedded new lines;\
            \ the preamble will be prepended to the generated BGP configuration."
          type: string
        retransmit_interval:
          format: int64
          title: "Period (in seconds) of retransmitting for OSPF Database Description\
            \ and Link State Requests; default: 5 seconds"
          type: integer
        transmit_delay:
          format: int64
          title: "Estimated time to transmit link state advertisements; default: 1\
            \ sec"
          type: integer
      title: Struct OSPF configuration; defines OSPF configuration for one anycast-enabled
        on-prem host
      type: object
    protoOspfv3Config:
      example:
        area: 0.0.0.1
        dead_interval: 1
        cost: 7
        retransmit_interval: 1
        hello_interval: 1
        interface: eth0
        transmit_delay: 6
      properties:
        area:
          description: OSPF area identifier; usually in the format of an IPv4 address
            (although not an address itself)
          example: 0.0.0.1
          type: string
        cost:
          format: int64
          title: Explicit link cost for the interface
          type: integer
        dead_interval:
          format: int64
          title: "OSPF router dead interval timer in seconds; must be the same for\
            \ all the routers on the same network; default: 40 secs"
          type: integer
        hello_interval:
          format: int64
          title: "Period (in seconds) of OSPF Hello packet, sent by the OSPF router;\
            \ must be the same for all the routers on the same network; default: 10\
            \ secs"
          type: integer
        interface:
          description: Name of the interface that is configured with external IP address
            of the host
          example: eth0
          type: string
        retransmit_interval:
          format: int64
          title: "Period (in seconds) of retransmitting for OSPF Database Description\
            \ and Link State Requests; default: 5 seconds"
          type: integer
        transmit_delay:
          format: int64
          title: "Estimated time to transmit link state advertisements; default: 1\
            \ sec"
          type: integer
      title: Struct OSPFv3 configuration; defines OSPFv3 configuration for one anycast-enabled
        on-prem host
      type: object
    protobufFieldMask:
      description: |-
        paths: "f.a"
            paths: "f.b.d"

        Here `f` represents a field in some root message, `a` and `b`
        fields in the message found in `f`, and `d` a field found in the
        message in `f.b`.

        Field masks are used to specify a subset of fields that should be
        returned by a get operation or modified by an update operation.
        Field masks also have a custom JSON encoding (see below).

        # Field Masks in Projections

        When used in the context of a projection, a response message or
        sub-message is filtered by the API to only contain those fields as
        specified in the mask. For example, if the mask in the previous
        example is applied to a response message as follows:

            f {
              a : 22
              b {
                d : 1
                x : 2
              }
              y : 13
            }
            z: 8

        The result will not contain specific values for fields x,y and z
        (their value will be set to the default, and omitted in proto text
        output):


            f {
              a : 22
              b {
                d : 1
              }
            }

        A repeated field is not allowed except at the last position of a
        paths string.

        If a FieldMask object is not present in a get operation, the
        operation applies to all fields (as if a FieldMask of all fields
        had been specified).

        Note that a field mask does not necessarily apply to the
        top-level response message. In case of a REST get operation, the
        field mask applies directly to the response, but in case of a REST
        list operation, the mask instead applies to each individual message
        in the returned resource list. In case of a REST custom method,
        other definitions may be used. Where the mask applies will be
        clearly documented together with its declaration in the API.  In
        any case, the effect on the returned resource/resources is required
        behavior for APIs.

        # Field Masks in Update Operations

        A field mask in update operations specifies which fields of the
        targeted resource are going to be updated. The API is required
        to only change the values of the fields as specified in the mask
        and leave the others untouched. If a resource is passed in to
        describe the updated values, the API ignores the values of all
        fields not covered by the mask.

        If a repeated field is specified for an update operation, the existing
        repeated values in the target resource will be overwritten by the new values.
        Note that a repeated field is only allowed in the last position of a `paths`
        string.

        If a sub-message is specified in the last position of the field mask for an
        update operation, then the existing sub-message in the target resource is
        overwritten. Given the target message:

            f {
              b {
                d : 1
                x : 2
              }
              c : 1
            }

        And an update message:

            f {
              b {
                d : 10
              }
            }

        then if the field mask is:

         paths: "f.b"

        then the result will be:

            f {
              b {
                d : 10
              }
              c : 1
            }

        However, if the update mask was:

         paths: "f.b.d"

        then the result would be:

            f {
              b {
                d : 10
                x : 2
              }
              c : 1
            }

        In order to reset a field's value to the default, the field must
        be in the mask and set to the default value in the provided resource.
        Hence, in order to reset all fields of a resource, provide a default
        instance of the resource and set all fields in the mask, or do
        not provide a mask as described below.

        If a field mask is not present on update, the operation applies to
        all fields (as if a field mask of all fields has been specified).
        Note that in the presence of schema evolution, this may mean that
        fields the client does not know and has therefore not filled into
        the request will be reset to their default. If this is unwanted
        behavior, a specific service may require a client to always specify
        a field mask, producing an error if not.

        As with get operations, the location of the resource which
        describes the updated values in the request message depends on the
        operation kind. In any case, the effect of the field mask is
        required to be honored by the API.

        ## Considerations for HTTP REST

        The HTTP kind of an update operation which uses a field mask must
        be set to PATCH instead of PUT in order to satisfy HTTP semantics
        (PUT must only be used for full updates).

        # JSON Encoding of Field Masks

        In JSON, a field mask is encoded as a single string where paths are
        separated by a comma. Fields name in each path are converted
        to/from lower-camel naming conventions.

        As an example, consider the following message declarations:

            message Profile {
              User user = 1;
              Photo photo = 2;
            }
            message User {
              string display_name = 1;
              string address = 2;
            }

        In proto a field mask for `Profile` may look as such:

            mask {
              paths: "user.display_name"
              paths: "photo"
            }

        In JSON, the same mask is represented as below:

            {
              mask: "user.displayName,photo"
            }

        # Field Masks and Oneof Fields

        Field masks treat fields in oneofs just as regular fields. Consider the
        following message:

            message SampleMessage {
              oneof test_oneof {
                string name = 4;
                SubMessage sub_message = 9;
              }
            }

        The field mask can be:

            mask {
              paths: "name"
            }

        Or:

            mask {
              paths: "sub_message"
            }

        Note that oneof type names ("test_oneof" in this case) cannot be used in
        paths.

        ## Field Mask Verification

        The implementation of the all the API methods, which have any FieldMask type
        field in the request, should verify the included field paths, and return
        `INVALID_ARGUMENT` error if any path is duplicated or unmappable.
      example:
        paths:
        - paths
        - paths
      properties:
        paths:
          description: The set of field mask paths.
          items:
            type: string
          type: array
      title: "`FieldMask` represents a set of symbolic field paths, for example:"
      type: object
    serviceConfig:
      example:
        config:
          ophid: ophid
          configBody: configBody
          version: version
      properties:
        config:
          $ref: '#/components/schemas/serviceConfigObject'
      title: "This structure is used to unmarshal the application manager's response\
        \ to a config request from \r\nthe config manager"
      type: object
    serviceConfigObject:
      example:
        ophid: ophid
        configBody: configBody
        version: version
      properties:
        configBody:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        ophid:
          type: string
        version:
          type: string
      type: object
    serviceStatusCode:
      default: SUCCESS
      enum:
      - SUCCESS
      - GENERAL_FAILURE
      - HASH_FAILURE
      - VALIDATION_FAILURE
      - COPY_FAILURE
      - RELOAD_FAILIURE
      type: string
    serviceStatusUpdateRequest:
      example:
        ophid: ophid
        appName: appName
        message: message
        version: version
        statusCode: null
      properties:
        appName:
          type: string
        message:
          type: string
        ophid:
          type: string
        statusCode:
          $ref: '#/components/schemas/serviceStatusCode'
        version:
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
