openapi: 3.0.1
info:
  description: "The DDI Keys application is a BloxOne DDI service for managing TSIG\
    \ keys and GSS-TSIG (Kerberos) keys which are used by other BloxOne DDI applications.\
    \ It is part of the full-featured, DDI cloud solution that enables customers to\
    \ deploy large numbers of protocol servers to deliver DNS and DHCP throughout\
    \ their enterprise network. \n\n"
  title: DDI Keys API
  version: v1
servers:
- url: http://csp.infoblox.com/api/ddi/v1/
- url: https://csp.infoblox.com/api/ddi/v1/
security:
- ApiKeyAuth: []
paths:
  /keys/generate_tsig:
    get:
      description: Use this method to generate a TSIG key with a random secret using
        the specified algorithm.
      operationId: generate_tsigGenerateTSIG
      parameters:
      - description: |-
          The TSIG key algorithm.

          Valid values are:
          * _hmac_sha256_
          * _hmac_sha1_
          * _hmac_sha224_
          * _hmac_sha384_
          * _hmac_sha512_

          Defaults to _hmac_sha256_.
        in: query
        name: algorithm
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keysGenerateTSIGResponse'
          description: GET operation response
      summary: Generate TSIG key with a random secret.
      tags:
      - generate_tsig
  /keys/kerberos:
    get:
      description: |-
        Use this method to retrieve __KerberosKey__ objects.
        A __KerberosKey__ object represents a Kerberos key.
      operationId: kerberosList
      parameters:
      - description: "\n\nA collection of response resources can be transformed by\
          \ specifying a set of JSON tags to be returned. For a “flat” resource, the\
          \ tag name is straightforward. If field selection is allowed on non-flat\
          \ hierarchical resources, the service should implement a qualified naming\
          \ scheme such as dot-qualification to reference data down the hierarchy.\
          \ If a resource does not have the specified tag, the tag does not appear\
          \ in the output resource.\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names.\n\n\t\t\t\t\t\t"
        in: query
        name: _fields
        schema:
          type: string
      - description: "\n\nA collection of response resources can be filtered by a\
          \ logical expression string that includes JSON tag references to values\
          \ in each resource, literal values, and logical operators. If a resource\
          \ does not have the specified tag, its value is assumed to be null.\n\n\
          Literal values include numbers (integer and floating-point), and quoted\
          \ (both single- or double-quoted) literal strings, and 'null'. The following\
          \ operators are commonly used in filter expressions:\n\n|  Op   |  Description\
          \               | \n|  --   |  -----------               | \n|  ==   | \
          \ Equal                     | \n|  !=   |  Not Equal                 | \n\
          |  >    |  Greater Than              | \n|   >=  |  Greater Than or Equal\
          \ To  | \n|  <    |  Less Than                 | \n|  <=   |  Less Than\
          \ or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |\
          \  Matches Regex             | \n|  !~   |  Does Not Match Regex      |\
          \ \n|  or   |  Logical OR                | \n|  not  |  Logical NOT    \
          \           | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t"
        in: query
        name: _filter
        schema:
          type: string
      - description: "\n\nThe integer index (zero-origin) of the offset into a collection\
          \ of resources. If omitted or null the value is assumed to be '0'.\n\n\t\
          \t\t\t\t\t\t"
        in: query
        name: _offset
        schema:
          type: integer
      - description: "\n\nThe integer number of resources to be returned in the response.\
          \ The service may impose maximum value. If omitted the service may impose\
          \ a default value.\n\n\t\t\t\t\t\t\t"
        in: query
        name: _limit
        schema:
          type: integer
      - description: "\n\nThe service-defined string used to identify a page of resources.\
          \ A null value indicates the first page.\n\n\t\t\t\t\t\t\t"
        in: query
        name: _page_token
        schema:
          type: string
      - description: "\n\nA collection of response resources can be sorted by their\
          \ JSON tags. For a 'flat' resource, the tag name is straightforward. If\
          \ sorting is allowed on non-flat hierarchical resources, the service should\
          \ implement a qualified naming scheme such as dot-qualification to reference\
          \ data down the hierarchy. If a resource does not have the specified tag,\
          \ its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names. The sort direction can be specified by a suffix\
          \ separated by whitespace before the tag name. The suffix 'asc' sorts the\
          \ data in ascending order. The suffix 'desc' sorts the data in descending\
          \ order. If no suffix is specified the data is sorted in ascending order.\n\
          \n\t\t\t\t\t\t"
        in: query
        name: _order_by
        schema:
          type: string
      - description: This parameter is used for filtering by tags.
        in: query
        name: _tfilter
        schema:
          type: string
      - description: This parameter is used for sorting by tags.
        in: query
        name: _torder_by
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keysListKerberosKeyResponse'
          description: GET operation response
      summary: Retrieve Kerberos keys.
      tags:
      - kerberos
  /keys/kerberos/{id}:
    delete:
      description: |-
        Use this method to delete a __KerberosKey__ object.
        A __KerberosKey__ object represents a Kerberos key.
      operationId: kerberosDelete
      parameters:
      - description: An application specific resource identity of a resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Delete the Kerberos key.
      tags:
      - kerberos
    get:
      description: |-
        Use this method to retrieve a __KerberosKey__ object.
        A __KerberosKey__ object represents a Kerberos key.
      operationId: kerberosRead
      parameters:
      - description: An application specific resource identity of a resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "\n\nA collection of response resources can be transformed by\
          \ specifying a set of JSON tags to be returned. For a “flat” resource, the\
          \ tag name is straightforward. If field selection is allowed on non-flat\
          \ hierarchical resources, the service should implement a qualified naming\
          \ scheme such as dot-qualification to reference data down the hierarchy.\
          \ If a resource does not have the specified tag, the tag does not appear\
          \ in the output resource.\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names.\n\n\t\t\t\t\t\t"
        in: query
        name: _fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keysReadKerberosKeyResponse'
          description: GET operation response
      summary: Retrieve the Kerberos key.
      tags:
      - kerberos
    patch:
      description: |-
        Use this method to update a __KerberosKey__ object.
        A __KerberosKey__ object represents a Kerberos key.
      operationId: kerberosUpdate
      parameters:
      - description: An application specific resource identity of a resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kerberosKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keysUpdateKerberosKeyResponse'
          description: PATCH operation response
      summary: Update the Kerberos key.
      tags:
      - kerberos
      x-codegen-request-body-name: body
  /keys/tsig:
    get:
      description: |-
        Use this method to retrieve __TSIGKey__ objects.
        A __TSIGKey__ object represents a TSIG key.
      operationId: tsigList
      parameters:
      - description: "\n\nA collection of response resources can be transformed by\
          \ specifying a set of JSON tags to be returned. For a “flat” resource, the\
          \ tag name is straightforward. If field selection is allowed on non-flat\
          \ hierarchical resources, the service should implement a qualified naming\
          \ scheme such as dot-qualification to reference data down the hierarchy.\
          \ If a resource does not have the specified tag, the tag does not appear\
          \ in the output resource.\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names.\n\n\t\t\t\t\t\t"
        in: query
        name: _fields
        schema:
          type: string
      - description: "\n\nA collection of response resources can be filtered by a\
          \ logical expression string that includes JSON tag references to values\
          \ in each resource, literal values, and logical operators. If a resource\
          \ does not have the specified tag, its value is assumed to be null.\n\n\
          Literal values include numbers (integer and floating-point), and quoted\
          \ (both single- or double-quoted) literal strings, and 'null'. The following\
          \ operators are commonly used in filter expressions:\n\n|  Op   |  Description\
          \               | \n|  --   |  -----------               | \n|  ==   | \
          \ Equal                     | \n|  !=   |  Not Equal                 | \n\
          |  >    |  Greater Than              | \n|   >=  |  Greater Than or Equal\
          \ To  | \n|  <    |  Less Than                 | \n|  <=   |  Less Than\
          \ or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |\
          \  Matches Regex             | \n|  !~   |  Does Not Match Regex      |\
          \ \n|  or   |  Logical OR                | \n|  not  |  Logical NOT    \
          \           | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t"
        in: query
        name: _filter
        schema:
          type: string
      - description: "\n\nThe integer index (zero-origin) of the offset into a collection\
          \ of resources. If omitted or null the value is assumed to be '0'.\n\n\t\
          \t\t\t\t\t\t"
        in: query
        name: _offset
        schema:
          type: integer
      - description: "\n\nThe integer number of resources to be returned in the response.\
          \ The service may impose maximum value. If omitted the service may impose\
          \ a default value.\n\n\t\t\t\t\t\t\t"
        in: query
        name: _limit
        schema:
          type: integer
      - description: "\n\nThe service-defined string used to identify a page of resources.\
          \ A null value indicates the first page.\n\n\t\t\t\t\t\t\t"
        in: query
        name: _page_token
        schema:
          type: string
      - description: "\n\nA collection of response resources can be sorted by their\
          \ JSON tags. For a 'flat' resource, the tag name is straightforward. If\
          \ sorting is allowed on non-flat hierarchical resources, the service should\
          \ implement a qualified naming scheme such as dot-qualification to reference\
          \ data down the hierarchy. If a resource does not have the specified tag,\
          \ its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names. The sort direction can be specified by a suffix\
          \ separated by whitespace before the tag name. The suffix 'asc' sorts the\
          \ data in ascending order. The suffix 'desc' sorts the data in descending\
          \ order. If no suffix is specified the data is sorted in ascending order.\n\
          \n\t\t\t\t\t\t"
        in: query
        name: _order_by
        schema:
          type: string
      - description: This parameter is used for filtering by tags.
        in: query
        name: _tfilter
        schema:
          type: string
      - description: This parameter is used for sorting by tags.
        in: query
        name: _torder_by
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keysListTSIGKeyResponse'
          description: GET operation response
      summary: Retrieve TSIG keys.
      tags:
      - tsig
    post:
      description: |-
        Use this method to create a __TSIGKey__ object.
        A __TSIGKey__ object represents a TSIG key.
      operationId: tsigCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keysTSIGKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keysCreateTSIGKeyResponse'
          description: POST operation response
      summary: Create the TSIG key.
      tags:
      - tsig
      x-tf-resource: keys_tsig
      x-tf-datasource: keys_tsigs
      x-sdk-default-tags: true
      x-codegen-request-body-name: body
  /keys/tsig/{id}:
    delete:
      description: |-
        Use this method to delete a __TSIGKey__ object.
        A __TSIGKey__ object represents a TSIG key.
      operationId: tsigDelete
      parameters:
      - description: An application specific resource identity of a resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Delete the TSIG key.
      tags:
      - tsig
    get:
      description: |-
        Use this method to retrieve a __TSIGKey__ object.
        A __TSIGKey__ object represents a TSIG key.
      operationId: tsigRead
      parameters:
      - description: An application specific resource identity of a resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "\n\nA collection of response resources can be transformed by\
          \ specifying a set of JSON tags to be returned. For a “flat” resource, the\
          \ tag name is straightforward. If field selection is allowed on non-flat\
          \ hierarchical resources, the service should implement a qualified naming\
          \ scheme such as dot-qualification to reference data down the hierarchy.\
          \ If a resource does not have the specified tag, the tag does not appear\
          \ in the output resource.\n\nSpecify this parameter as a comma-separated\
          \ list of JSON tag names.\n\n\t\t\t\t\t\t"
        in: query
        name: _fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keysReadTSIGKeyResponse'
          description: GET operation response
      summary: Retrieve the TSIG key.
      tags:
      - tsig
    patch:
      description: |-
        Use this method to update a __TSIGKey__ object.
        A __TSIGKey__ object represents a TSIG key.
      operationId: tsigUpdate
      parameters:
      - description: An application specific resource identity of a resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keysTSIGKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/keysUpdateTSIGKeyResponse'
          description: PATCH operation response
      summary: Update the TSIG key.
      tags:
      - tsig
      x-sdk-default-tags: true
      x-codegen-request-body-name: body
  /keys/upload:
    post:
      description: Use this method to upload specified content type to the keys service.
      operationId: uploadUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ddiuploadResponse'
          description: POST operation response
      summary: Upload content to the keys service.
      tags:
      - upload
      x-sdk-default-tags: true
      x-codegen-request-body-name: body
components:
  schemas:
    ddiuploadResponse:
      description: The response format for uploading content.
      example:
        warning: warning
        kerberos_keys:
          items:
          - principal: principal
            uploaded_at: uploaded_at
            domain: domain
            comment: comment
            id: id
            version: 0
            algorithm: algorithm
            tags: "{}"
          - principal: principal
            uploaded_at: uploaded_at
            domain: domain
            comment: comment
            id: id
            version: 0
            algorithm: algorithm
            tags: "{}"
      properties:
        kerberos_keys:
          $ref: '#/components/schemas/kerberosKeys'
        warning:
          description: May contain any non-critical warning messages after processing
            the content.
          type: string
      title: UploadResponse
      type: object
    kerberosKey:
      description: A __Key__ object represents a Kerberos key.
      example:
        principal: principal
        uploaded_at: uploaded_at
        domain: domain
        comment: comment
        id: id
        version: 0
        algorithm: algorithm
        tags: "{}"
      properties:
        algorithm:
          description: Encryption algorithm of the key in accordance with RFC 3961.
          readOnly: true
          type: string
        comment:
          description: The description for Kerberos key. May contain 0 to 1024 characters.
            Can include UTF-8.
          type: string
        domain:
          description: Kerberos realm of the principal.
          readOnly: true
          type: string
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        principal:
          description: Kerberos principal associated with key.
          readOnly: true
          type: string
        tags:
          additionalProperties: false
          description: The tags for the Kerberos key in JSON format.
          type: object
        uploaded_at:
          description: Upload time for the key.
          readOnly: true
          type: string
        version:
          description: The version number (KVNO) of the key.
          format: int64
          readOnly: true
          type: integer
      title: Key
      type: object
    kerberosKeys:
      description: The list of __Key__ objects.
      example:
        items:
        - principal: principal
          uploaded_at: uploaded_at
          domain: domain
          comment: comment
          id: id
          version: 0
          algorithm: algorithm
          tags: "{}"
        - principal: principal
          uploaded_at: uploaded_at
          domain: domain
          comment: comment
          id: id
          version: 0
          algorithm: algorithm
          tags: "{}"
      properties:
        items:
          items:
            $ref: '#/components/schemas/kerberosKey'
          type: array
      title: Keys
      type: object
    keysCreateTSIGKeyResponse:
      description: The response format to create a __TSIGKey__ object.
      example:
        result:
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          comment: comment
          id: id
          secret: secret
          algorithm: algorithm
          protocol_name: protocol_name
          tags: "{}"
      properties:
        result:
          $ref: '#/components/schemas/keysTSIGKey'
      title: CreateTSIGKeyResponse
      type: object
    keysGenerateTSIGResponse:
      description: The response format to generate the TSIG key.
      example:
        result:
          secret: secret
      properties:
        result:
          $ref: '#/components/schemas/keysGenerateTSIGResult'
      title: GenerateTSIGResponse
      type: object
    keysGenerateTSIGResult:
      description: The generated TSIG key.
      example:
        secret: secret
      properties:
        secret:
          description: The random TSIG key secret generated by the specified algorithm
            as a Base64 encoded string.
          type: string
      title: GenerateTSIGResult
      type: object
    keysListKerberosKeyResponse:
      description: The response format to retrieve __KerberosKey__ resources extracted
        from the uploaded keytab file.
      example:
        results:
        - principal: principal
          uploaded_at: uploaded_at
          domain: domain
          comment: comment
          id: id
          version: 0
          algorithm: algorithm
          tags: "{}"
        - principal: principal
          uploaded_at: uploaded_at
          domain: domain
          comment: comment
          id: id
          version: 0
          algorithm: algorithm
          tags: "{}"
      properties:
        results:
          description: The list of KerberosKey objects.
          items:
            $ref: '#/components/schemas/kerberosKey'
          type: array
      title: ListKerberosKeyResponse
      type: object
    keysListTSIGKeyResponse:
      description: The response format to retrieve __TSIGKey__ objects.
      example:
        results:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          comment: comment
          id: id
          secret: secret
          algorithm: algorithm
          protocol_name: protocol_name
          tags: "{}"
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          comment: comment
          id: id
          secret: secret
          algorithm: algorithm
          protocol_name: protocol_name
          tags: "{}"
      properties:
        results:
          description: The list of TSIGKey objects.
          items:
            $ref: '#/components/schemas/keysTSIGKey'
          type: array
      title: ListTSIGKeyResponse
      type: object
    keysReadKerberosKeyResponse:
      description: The response format to retrieve the __KerberosKey__ resource extracted
        from the uploaded keytab file.
      example:
        result:
          principal: principal
          uploaded_at: uploaded_at
          domain: domain
          comment: comment
          id: id
          version: 0
          algorithm: algorithm
          tags: "{}"
      properties:
        result:
          $ref: '#/components/schemas/kerberosKey'
      title: ReadKerberosKeyResponse
      type: object
    keysReadTSIGKeyResponse:
      description: The response format to retrieve the __TSIGKey__ object.
      example:
        result:
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          comment: comment
          id: id
          secret: secret
          algorithm: algorithm
          protocol_name: protocol_name
          tags: "{}"
      properties:
        result:
          $ref: '#/components/schemas/keysTSIGKey'
      title: ReadTSIGKeyResponse
      type: object
    keysTSIGKey:
      description: A __TSIGKey__ object (_keys/tsig_) represents a TSIG key.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        comment: comment
        id: id
        secret: secret
        algorithm: algorithm
        protocol_name: protocol_name
        tags: "{}"
      properties:
        algorithm:
          description: |-
            The TSIG key algorithm.

            Valid values are:
            * _hmac_sha1_
            * _hmac_sha224_
            * _hmac_sha256_
            * _hmac_sha384_
            * _hmac_sha512_

            Defaults to _hmac_sha256_.
          type: string
        comment:
          description: The description for the TSIG key. May contain 0 to 1024 characters.
            Can include UTF-8.
          type: string
        created_at:
          description: Time when the object has been created.
          format: date-time
          readOnly: true
          type: string
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        name:
          description: The TSIG key name in the absolute domain name format.
          type: string
        protocol_name:
          description: The TSIG key name supplied during a create/update operation
            that is converted to canonical form in punycode.
          readOnly: true
          type: string
        secret:
          description: The TSIG key secret as a Base64 encoded string.
          type: string
        tags:
          additionalProperties: false
          description: The tags for the TSIG key in JSON format.
          type: object
        updated_at:
          description: Time when the object has been updated. Equals to _created_at_
            if not updated after creation.
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      - secret
      title: TSIGKey
      type: object
    keysUpdateKerberosKeyResponse:
      description: The response format to update __KerberosKey__ resource extracted
        from the uploaded keytab file.
      example:
        result:
          principal: principal
          uploaded_at: uploaded_at
          domain: domain
          comment: comment
          id: id
          version: 0
          algorithm: algorithm
          tags: "{}"
      properties:
        result:
          $ref: '#/components/schemas/kerberosKey'
      title: UpdateKerberosKeyResponse
      type: object
    keysUpdateTSIGKeyResponse:
      description: The response format to update __TSIGKey__ object.
      example:
        result:
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          comment: comment
          id: id
          secret: secret
          algorithm: algorithm
          protocol_name: protocol_name
          tags: "{}"
      properties:
        result:
          $ref: '#/components/schemas/keysTSIGKey'
      title: UpdateTSIGKeyResponse
      type: object
    protobufFieldMask:
      description: |-
        paths: "f.a"
            paths: "f.b.d"

        Here `f` represents a field in some root message, `a` and `b`
        fields in the message found in `f`, and `d` a field found in the
        message in `f.b`.

        Field masks are used to specify a subset of fields that should be
        returned by a get operation or modified by an update operation.
        Field masks also have a custom JSON encoding (see below).

        # Field Masks in Projections

        When used in the context of a projection, a response message or
        sub-message is filtered by the API to only contain those fields as
        specified in the mask. For example, if the mask in the previous
        example is applied to a response message as follows:

            f {
              a : 22
              b {
                d : 1
                x : 2
              }
              y : 13
            }
            z: 8

        The result will not contain specific values for fields x,y and z
        (their value will be set to the default, and omitted in proto text
        output):


            f {
              a : 22
              b {
                d : 1
              }
            }

        A repeated field is not allowed except at the last position of a
        paths string.

        If a FieldMask object is not present in a get operation, the
        operation applies to all fields (as if a FieldMask of all fields
        had been specified).

        Note that a field mask does not necessarily apply to the
        top-level response message. In case of a REST get operation, the
        field mask applies directly to the response, but in case of a REST
        list operation, the mask instead applies to each individual message
        in the returned resource list. In case of a REST custom method,
        other definitions may be used. Where the mask applies will be
        clearly documented together with its declaration in the API.  In
        any case, the effect on the returned resource/resources is required
        behavior for APIs.

        # Field Masks in Update Operations

        A field mask in update operations specifies which fields of the
        targeted resource are going to be updated. The API is required
        to only change the values of the fields as specified in the mask
        and leave the others untouched. If a resource is passed in to
        describe the updated values, the API ignores the values of all
        fields not covered by the mask.

        If a repeated field is specified for an update operation, the existing
        repeated values in the target resource will be overwritten by the new values.
        Note that a repeated field is only allowed in the last position of a `paths`
        string.

        If a sub-message is specified in the last position of the field mask for an
        update operation, then the existing sub-message in the target resource is
        overwritten. Given the target message:

            f {
              b {
                d : 1
                x : 2
              }
              c : 1
            }

        And an update message:

            f {
              b {
                d : 10
              }
            }

        then if the field mask is:

         paths: "f.b"

        then the result will be:

            f {
              b {
                d : 10
              }
              c : 1
            }

        However, if the update mask was:

         paths: "f.b.d"

        then the result would be:

            f {
              b {
                d : 10
                x : 2
              }
              c : 1
            }

        In order to reset a field's value to the default, the field must
        be in the mask and set to the default value in the provided resource.
        Hence, in order to reset all fields of a resource, provide a default
        instance of the resource and set all fields in the mask, or do
        not provide a mask as described below.

        If a field mask is not present on update, the operation applies to
        all fields (as if a field mask of all fields has been specified).
        Note that in the presence of schema evolution, this may mean that
        fields the client does not know and has therefore not filled into
        the request will be reset to their default. If this is unwanted
        behavior, a specific service may require a client to always specify
        a field mask, producing an error if not.

        As with get operations, the location of the resource which
        describes the updated values in the request message depends on the
        operation kind. In any case, the effect of the field mask is
        required to be honored by the API.

        ## Considerations for HTTP REST

        The HTTP kind of an update operation which uses a field mask must
        be set to PATCH instead of PUT in order to satisfy HTTP semantics
        (PUT must only be used for full updates).

        # JSON Encoding of Field Masks

        In JSON, a field mask is encoded as a single string where paths are
        separated by a comma. Fields name in each path are converted
        to/from lower-camel naming conventions.

        As an example, consider the following message declarations:

            message Profile {
              User user = 1;
              Photo photo = 2;
            }
            message User {
              string display_name = 1;
              string address = 2;
            }

        In proto a field mask for `Profile` may look as such:

            mask {
              paths: "user.display_name"
              paths: "photo"
            }

        In JSON, the same mask is represented as below:

            {
              mask: "user.displayName,photo"
            }

        # Field Masks and Oneof Fields

        Field masks treat fields in oneofs just as regular fields. Consider the
        following message:

            message SampleMessage {
              oneof test_oneof {
                string name = 4;
                SubMessage sub_message = 9;
              }
            }

        The field mask can be:

            mask {
              paths: "name"
            }

        Or:

            mask {
              paths: "sub_message"
            }

        Note that oneof type names ("test_oneof" in this case) cannot be used in
        paths.

        ## Field Mask Verification

        The implementation of the all the API methods, which have any FieldMask type
        field in the request, should verify the included field paths, and return
        `INVALID_ARGUMENT` error if any path is duplicated or unmappable.
      properties:
        paths:
          description: The set of field mask paths.
          items:
            type: string
          type: array
      title: "`FieldMask` represents a set of symbolic field paths, for example:"
      type: object
    uploadContentType:
      default: UNKNOWN
      description: |2-
         - UNKNOWN: Unknown type.
         - KEYTAB: Keytab file containing Kerberos keys.
      enum:
      - UNKNOWN
      - KEYTAB
      type: string
    uploadRequest:
      description: The request format for uploading content.
      properties:
        comment:
          description: The description for uploaded content. May contain 0 to 1024
            characters. Can include UTF-8.
          type: string
        content:
          description: Base64 encoded content.
          type: string
        fields:
          $ref: '#/components/schemas/protobufFieldMask'
        tags:
          additionalProperties: false
          description: The tags for uploaded content in JSON format.
          type: object
        type:
          $ref: '#/components/schemas/uploadContentType'
      required:
      - content
      - type
      title: Request
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
