/*
Host Activation Service

Testing UICSRAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package infraprovision

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/infobloxopen/bloxone-go-client/infraprovision"
)

func TestUICSRAPIService(t *testing.T) {

	apiClient := infraprovision.NewAPIClient()

	t.Run("Test UICSRAPIService Approve", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var activationCode string

		resp, httpRes, err := apiClient.UICSRAPI.Approve(context.Background(), activationCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UICSRAPIService Deny", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var activationCode string

		resp, httpRes, err := apiClient.UICSRAPI.Deny(context.Background(), activationCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UICSRAPIService List", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.UICSRAPI.List(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UICSRAPIService Revoke", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var certSerial string

		resp, httpRes, err := apiClient.UICSRAPI.Revoke(context.Background(), certSerial).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UICSRAPIService Revoke2", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var ophid string

		resp, httpRes, err := apiClient.UICSRAPI.Revoke2(context.Background(), ophid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
