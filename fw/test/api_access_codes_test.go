/*
BloxOne FW API

Testing AccessCodesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package fw

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/infobloxopen/bloxone-go-client/fw"
)

func TestAccessCodesAPIService(t *testing.T) {

	apiClient := fw.NewAPIClient()

	t.Run("Test AccessCodesAPIService CreateAccessCode", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AccessCodesAPI.CreateAccessCode(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AccessCodesAPIService DeleteAccessCodes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.AccessCodesAPI.DeleteAccessCodes(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AccessCodesAPIService DeleteSingleAccessCodes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accessKey string

		httpRes, err := apiClient.AccessCodesAPI.DeleteSingleAccessCodes(context.Background(), accessKey).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AccessCodesAPIService ListAccessCodes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AccessCodesAPI.ListAccessCodes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AccessCodesAPIService ReadAccessCode", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accessKey string

		resp, httpRes, err := apiClient.AccessCodesAPI.ReadAccessCode(context.Background(), accessKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AccessCodesAPIService UpdateAccessCode", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var payloadAccessKey string

		resp, httpRes, err := apiClient.AccessCodesAPI.UpdateAccessCode(context.Background(), payloadAccessKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
