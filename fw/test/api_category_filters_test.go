/*
BloxOne FW API

Testing CategoryFiltersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package fw

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/infobloxopen/bloxone-go-client/fw"
)

func TestCategoryFiltersAPIService(t *testing.T) {

	apiClient := fw.NewAPIClient()

	t.Run("Test CategoryFiltersAPIService CreateCategoryFilter", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CategoryFiltersAPI.CreateCategoryFilter(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CategoryFiltersAPIService DeleteCategoryFilters", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.CategoryFiltersAPI.DeleteCategoryFilters(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CategoryFiltersAPIService DeleteSingleCategoryFilters", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		httpRes, err := apiClient.CategoryFiltersAPI.DeleteSingleCategoryFilters(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CategoryFiltersAPIService ListCategoryFilters", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CategoryFiltersAPI.ListCategoryFilters(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CategoryFiltersAPIService ReadCategoryFilter", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		resp, httpRes, err := apiClient.CategoryFiltersAPI.ReadCategoryFilter(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CategoryFiltersAPIService UpdateCategoryFilter", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		resp, httpRes, err := apiClient.CategoryFiltersAPI.UpdateCategoryFilter(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
